<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for a typical batch application.</description>
 	
	<batch:job id="job1">
		<batch:step id="step1"  >			
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="multiResourceReader" writer="writer" commit-interval="100" />
			</batch:tasklet>
		</batch:step>	
	</batch:job> 
	
		<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="modulo,entorno,batch,fecha, min, seg,script, fecha2, min2, seg2,rC, rC2,estado,tiempo,observaciones,cadena" />
						<property name="delimiter" value=":"/>  <!-- delimitador separador de cadenas -->
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.everis.report.batch.data.ReportDtoFieldSetMapper" />
				</property>
			</bean>
		</property>
<!-- 		<property name="resource" value="classpath:fichero.log" /> -->
	</bean>
	
	<bean id="multiResourceReader"	class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="file:*.log" />
		<property name="delegate" ref="reader" />
	 </bean>
	

</beans>
